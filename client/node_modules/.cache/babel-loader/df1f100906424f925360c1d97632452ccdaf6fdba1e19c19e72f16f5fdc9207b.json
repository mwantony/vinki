{"ast":null,"code":"import { DIRECTION } from './utils.js';\nimport './change-details.js';\nimport './holder.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(value, cursorPos, oldValue, oldSelection) {\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection;\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /**\n    Start changing position\n    @readonly\n  */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /**\n    Inserted symbols count\n    @readonly\n  */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /**\n    Inserted symbols\n    @readonly\n  */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /**\n    Removed symbols count\n    @readonly\n  */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /**\n    Removed symbols\n    @readonly\n  */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /**\n    Unchanged head symbols\n    @readonly\n  */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /**\n    Unchanged tail symbols\n    @readonly\n  */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /**\n    Remove direction\n    @readonly\n  */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\nexport { ActionDetails as default };","map":{"version":3,"names":["DIRECTION","ActionDetails","constructor","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","insertedCount","inserted","substr","removedCount","max","end","length","removed","head","substring","tail","removeDirection","NONE","RIGHT","LEFT","default"],"sources":["C:/Users/Antony/Documents/GitHub/vinki/client/node_modules/imask/esm/core/action-details.js"],"sourcesContent":["import { DIRECTION } from './utils.js';\nimport './change-details.js';\nimport './holder.js';\n\n/** Provides details of changing input */\nclass ActionDetails {\n  /** Current input value */\n\n  /** Current cursor position */\n\n  /** Old input value */\n\n  /** Old selection */\n\n  constructor(value, cursorPos, oldValue, oldSelection) {\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection;\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /**\n    Start changing position\n    @readonly\n  */\n  get startChangePos() {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /**\n    Inserted symbols count\n    @readonly\n  */\n  get insertedCount() {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /**\n    Inserted symbols\n    @readonly\n  */\n  get inserted() {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /**\n    Removed symbols count\n    @readonly\n  */\n  get removedCount() {\n    // Math.max for opposite operation\n    return Math.max(this.oldSelection.end - this.startChangePos ||\n    // for Delete\n    this.oldValue.length - this.value.length, 0);\n  }\n\n  /**\n    Removed symbols\n    @readonly\n  */\n  get removed() {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /**\n    Unchanged head symbols\n    @readonly\n  */\n  get head() {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /**\n    Unchanged tail symbols\n    @readonly\n  */\n  get tail() {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /**\n    Remove direction\n    @readonly\n  */\n  get removeDirection() {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n    // if not range removed (event with backspace)\n    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n  }\n}\n\nexport { ActionDetails as default };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,OAAO,qBAAqB;AAC5B,OAAO,aAAa;;AAEpB;AACA,MAAMC,aAAa,CAAC;EAClB;;EAEA;;EAEA;;EAEA;;EAEAC,WAAWA,CAACC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,YAAY,EAAE;IACpD,IAAI,CAACH,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,YAAY,GAAGA,YAAY;;IAEhC;IACA,OAAO,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,CAAC,EAAE,IAAI,CAACC,cAAc,CAAC,KAAK,IAAI,CAACH,QAAQ,CAACE,KAAK,CAAC,CAAC,EAAE,IAAI,CAACC,cAAc,CAAC,EAAE;MAC/F,EAAE,IAAI,CAACF,YAAY,CAACG,KAAK;IAC3B;EACF;;EAEA;AACF;AACA;AACA;EACE,IAAID,cAAcA,CAAA,EAAG;IACnB,OAAOE,IAAI,CAACC,GAAG,CAAC,IAAI,CAACP,SAAS,EAAE,IAAI,CAACE,YAAY,CAACG,KAAK,CAAC;EAC1D;;EAEA;AACF;AACA;AACA;EACE,IAAIG,aAAaA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACR,SAAS,GAAG,IAAI,CAACI,cAAc;EAC7C;;EAEA;AACF;AACA;AACA;EACE,IAAIK,QAAQA,CAAA,EAAG;IACb,OAAO,IAAI,CAACV,KAAK,CAACW,MAAM,CAAC,IAAI,CAACN,cAAc,EAAE,IAAI,CAACI,aAAa,CAAC;EACnE;;EAEA;AACF;AACA;AACA;EACE,IAAIG,YAAYA,CAAA,EAAG;IACjB;IACA,OAAOL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACV,YAAY,CAACW,GAAG,GAAG,IAAI,CAACT,cAAc;IAC3D;IACA,IAAI,CAACH,QAAQ,CAACa,MAAM,GAAG,IAAI,CAACf,KAAK,CAACe,MAAM,EAAE,CAAC,CAAC;EAC9C;;EAEA;AACF;AACA;AACA;EACE,IAAIC,OAAOA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACd,QAAQ,CAACS,MAAM,CAAC,IAAI,CAACN,cAAc,EAAE,IAAI,CAACO,YAAY,CAAC;EACrE;;EAEA;AACF;AACA;AACA;EACE,IAAIK,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACjB,KAAK,CAACkB,SAAS,CAAC,CAAC,EAAE,IAAI,CAACb,cAAc,CAAC;EACrD;;EAEA;AACF;AACA;AACA;EACE,IAAIc,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACnB,KAAK,CAACkB,SAAS,CAAC,IAAI,CAACb,cAAc,GAAG,IAAI,CAACI,aAAa,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACE,IAAIW,eAAeA,CAAA,EAAG;IACpB,IAAI,CAAC,IAAI,CAACR,YAAY,IAAI,IAAI,CAACH,aAAa,EAAE,OAAOZ,SAAS,CAACwB,IAAI;;IAEnE;IACA,OAAO,CAAC,IAAI,CAAClB,YAAY,CAACW,GAAG,KAAK,IAAI,CAACb,SAAS,IAAI,IAAI,CAACE,YAAY,CAACG,KAAK,KAAK,IAAI,CAACL,SAAS;IAC9F;IACA,IAAI,CAACE,YAAY,CAACW,GAAG,KAAK,IAAI,CAACX,YAAY,CAACG,KAAK,GAAGT,SAAS,CAACyB,KAAK,GAAGzB,SAAS,CAAC0B,IAAI;EACtF;AACF;AAEA,SAASzB,aAAa,IAAI0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}