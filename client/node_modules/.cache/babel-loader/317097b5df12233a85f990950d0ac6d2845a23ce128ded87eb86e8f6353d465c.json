{"ast":null,"code":"import IMask from './holder.js';\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Can skip chars */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate(details) {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\nexport { ChangeDetails as default };","map":{"version":3,"names":["IMask","ChangeDetails","constructor","details","Object","assign","inserted","rawInserted","skip","tailShift","aggregate","offset","length","default"],"sources":["C:/Users/Antony/Documents/GitHub/vinki/client/node_modules/imask/esm/core/change-details.js"],"sourcesContent":["import IMask from './holder.js';\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nclass ChangeDetails {\n  /** Inserted symbols */\n\n  /** Can skip chars */\n\n  /** Additional offset if any changes occurred before tail */\n\n  /** Raw inserted is used by dynamic mask */\n\n  constructor(details) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate(details) {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset() {\n    return this.tailShift + this.inserted.length;\n  }\n}\nIMask.ChangeDetails = ChangeDetails;\n\nexport { ChangeDetails as default };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,CAAC;EAClB;;EAEA;;EAEA;;EAEA;;EAEAC,WAAWA,CAACC,OAAO,EAAE;IACnBC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAE;MAClBC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE;IACb,CAAC,EAAEN,OAAO,CAAC;EACb;;EAEA;AACF;AACA;AACA;EACEO,SAASA,CAACP,OAAO,EAAE;IACjB,IAAI,CAACI,WAAW,IAAIJ,OAAO,CAACI,WAAW;IACvC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,IAAIL,OAAO,CAACK,IAAI;IACrC,IAAI,CAACF,QAAQ,IAAIH,OAAO,CAACG,QAAQ;IACjC,IAAI,CAACG,SAAS,IAAIN,OAAO,CAACM,SAAS;IACnC,OAAO,IAAI;EACb;;EAEA;EACA,IAAIE,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACF,SAAS,GAAG,IAAI,CAACH,QAAQ,CAACM,MAAM;EAC9C;AACF;AACAZ,KAAK,CAACC,aAAa,GAAGA,aAAa;AAEnC,SAASA,aAAa,IAAIY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}