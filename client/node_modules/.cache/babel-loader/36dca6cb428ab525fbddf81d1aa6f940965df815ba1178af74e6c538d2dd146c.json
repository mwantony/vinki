{"ast":null,"code":"import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update(opts) {\n    if (opts.mask) opts.validate = value => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\nexport { MaskedRegExp as default };","map":{"version":3,"names":["Masked","IMask","MaskedRegExp","_update","opts","mask","validate","value","search","default"],"sources":["C:/Users/Antony/Documents/GitHub/vinki/client/node_modules/imask/esm/masked/regexp.js"],"sourcesContent":["import Masked from './base.js';\nimport IMask from '../core/holder.js';\nimport '../core/change-details.js';\nimport '../core/continuous-tail-details.js';\nimport '../core/utils.js';\n\n/** Masking by RegExp */\nclass MaskedRegExp extends Masked {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update(opts) {\n    if (opts.mask) opts.validate = value => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\nIMask.MaskedRegExp = MaskedRegExp;\n\nexport { MaskedRegExp as default };\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,WAAW;AAC9B,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,2BAA2B;AAClC,OAAO,oCAAoC;AAC3C,OAAO,kBAAkB;;AAEzB;AACA,MAAMC,YAAY,SAASF,MAAM,CAAC;EAChC;AACF;AACA;AACA;EACEG,OAAOA,CAACC,IAAI,EAAE;IACZ,IAAIA,IAAI,CAACC,IAAI,EAAED,IAAI,CAACE,QAAQ,GAAGC,KAAK,IAAIA,KAAK,CAACC,MAAM,CAACJ,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;IACpE,KAAK,CAACF,OAAO,CAACC,IAAI,CAAC;EACrB;AACF;AACAH,KAAK,CAACC,YAAY,GAAGA,YAAY;AAEjC,SAASA,YAAY,IAAIO,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}